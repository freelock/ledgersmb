LedgerSMB 1.3 (svn trunk) INSTALL
=================================

This file documents automated installation methods for LedgerSMB 1.3.0.

Manual installation instructions have been moved to INSTALL.manual, and it does 
not cover checking out from svn or obtaining a tarball (we assume if you have 
this file, you are already past that point). 


Requirements
------------

LedgerSMB 1.3 requires the following software before you begin.
 * PostgreSQL 8.1 or higher
 * Perl 5.8 or higher
 * A web server (Apache 2.2, for example) which supports both executing CGI
   scripts and passing authentication data to them.

the instructions here assume Linux or UNIX.


Change working directory to /path/to/ledgersmb13
-------------------------------------------------

For this INSTALL procedure /path/to/ledgersmb13 is the location where you have
manually installed the LedgerSMB 1.3 source or checkout. LedgerSMB 1.3 in
pre-alpha form is not currently packaged for any distribution.

$ cd /path/to/ledgersmb13/
/path/to/ledgersmb13 $

All commands from this point forward are executed from a working directory of
/path/to/ledgersmb13 unless otherwise noted.


Application Installation
-----------------------

An automated install script (minus the database installation) is found in 
install.sh.  This script installs the necessary perl modules and configures 
Apache using the ledgersmb-http.conf file as a template.

After running this script, you will need to restart apache:

$ sudo /etc/init.d/apache2 restart
 * Stopping apache2 ...              [ ok ]
 * Starting apache2 ...              [ ok ]

(On other systems you may need to log in as root to do this.)


Apache must be able to read and write /path/to/ledgersmb13/templates/
-------------------------------------------------

Make sure the /path/to/ledgersmb13/templates directory is read-writable by 
user:group apache:apache, or as appropriate for your distribution's Apache 
conventions.

Apache must also be able to read (but not write) /path/to/ledgersmb13/ and its 
subdirectories.


=========================
PostgreSQL Configuration
=========================

LedgerSMB 1.3 is tightly integrated with PostgreSQL. In the current beta 
state, it is necessary to run several PostgreSQL commands and SQL statements
exactly as shown below. Automated installion is still somewhat shakey.


Securing PostgreSQL with LedgerSMB
========================================

LedgerSMB 1.3.0 and higher use the database to enforce all permissions and 
ensure that users are who they say they are.  For this reason, it is critical
that PostgreSQL be properly secured.

In the standard setup, LedgerSMB authenticates a user by logging into PostgreSQL
with the username/password provided.  For this reason it is important that the
authentication in PostgreSQL be properly configured.  This is handled in the
pg_hba.conf file in the PostgreSQL data directory.  Each line ends in an
authentication method.  Methods which can cause major problems include:
 * trust (allows any user to authenticate merely by knowing the username)
 * ident sameuser (which, in most cases, will just prevent anyone from logging
   on)

Most commonly you want to set the authentication for every user, database, etc.
to md5, which uses a digest-type authentication which is reasonably secure.

In this file you can also require SSL to be used to connect to the database.
This is most helpful when the web server and database server are on different
computers.


Automated PostgreSQL Database Setup
===================================
Point your browser to http://[yourhost]/path/to/ledgersmb/initiate.pl

You will see an HTTP authentication prompt.  Enter credentials for the database 
superuser (for example "postgres" user).  Then follow the prompts and fill in 
the information.

There is also a script provided called 'install-mycompany.sh' which can be used 
to set up the database from the command line.

Login to LedgerSMB 1.3 Instance
===============================

It should now be possible to log into your LedgerSMB 1.3 instance at:

http://localhost/ledgersmb

With cookies enabled for localhost.

Name:     myuser
Password: MYUSER_PASSWORD
Company:  mycompany


How-To Section
==============

Q: How do I remove the 90+ roles for mycompany created by the INSTALL process?

A: First, since most objects in the mycompany database depend on these roles,
you must drop the mycompany database first, obviously with loss of data.

$ dropdb -U postgres mycompany

After that, you must issue the droprole command for each rolname in the query
embedded in the following command:

$ for role in `psql -U postgres -t -c "SELECT rolname FROM pg_roles WHERE rolname LIKE 'lsmb_mycompany%';"`; do dropuser -U postgres $role; done
